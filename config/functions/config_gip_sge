###############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###############################################################################
#
# NAME        : config_gip_sge
#
# DESCRIPTION : Configures the SGE information provider for lcg-CE 3.1
#
# AUTHORS     : goncalo@lip.pt
#
# NOTES       : - Tested in SGE V60u7_1, V61u3
#
# YAIM MODULE : glite-yaim-sge-utils
#
###############################################################################


function config_gip_sge_check(){
    requires $1 QUEUES SGE_ROOT SGE_CELL
    return $?
}


function config_gip_sge_setenv(){
    return 0
}


function config_gip_sge(){

INSTALL_ROOT=${INSTALL_ROOT:-/opt}

yaimlog DEBUG "Get gLite version "


###
### Get glite version
###

glite_version=`/opt/glite/bin/glite-version | cut -d '.' -f1-2`
if [ "X$glite_version" == "X" -o "X$glite_version" != "X3.1" ]; then
   yaimlog WARNING "gLite version not supported anymore..."
else
   yaimlog DEBUG "Running SGE Information Provider configuration for gLite version >= 3.1"
fi


#---*---


###
### General checks regarding Information Plugin
###

yaimlog INFO "Build InfoProvider based on LeSC implementation"

SGE_OLD_INFOPROVIDER=$INSTALL_ROOT/lcg/libexec/lcg-info-dynamic-sge
SGE_INFOPROVIDER=$INSTALL_ROOT/lcg/libexec/sge_helper

if [ -e ${SGE_OLD_INFOPROVIDER} ]; then
     yaimlog WARNING "A new implementation of SGE InfoProvider is available. ${SGE_OLD_INFOPROVIDER} will not be used anymore."
fi

if [ ! -e ${SGE_INFOPROVIDER} ]; then
   yaimlog ABORT "SGE InfoProvider is not installed !!! Without it the information system will not work ! Exiting ... "
   exit 1
fi

if [ -e ${SGE_INFOPROVIDER}.rpmnew ]; then
   yaimlog WARNING "New ${SGE_INFOPROVIDER} is deployed as .rpmnew in order to not overright your IP changes. Old ${SGE_INFOPROVIDER} is still in place."
fi

if [ -e ${SGE_INFOPROVIDER}.rpmsave ]; then
   yaimlog WARNING "Previous ${SGE_INFOPROVIDER} is saved as .rpmsave. New ${SGE_INFOPROVIDER} is in place."
fi

yaimlog DEBUG "Check ${SGE_INFOPROVIDER} file permissions"
if [ -x ${SGE_INFOPROVIDER} ]; then
     yaimlog DEBUG "${SGE_INFOPROVIDER} has correct permissions"
else
     yaimlog WARNING "${SGE_INFOPROVIDER} does not has the correct permissions. Changing them ..."
     chmod 755 $SGE_INFOPROVIDER
fi


#---*---


###
### Build /etc/sge-jobmanager/vqueues
###

SGE_INFOPROVIDER_DIR=/etc/sge-jobmanager
if [ ! -d ${SGE_INFOPROVIDER_DIR} ]; then
   mkdir ${SGE_INFOPROVIDER_DIR}
fi 

yaimlog DEBUG "Creating ${SGE_INFOPROVIDER_VQUEUES} file..."
SGE_INFOPROVIDER_VQUEUES=${SGE_INFOPROVIDER_DIR}/vqueues.conf
if [ -e ${SGE_INFOPROVIDER_VQUEUES} ]; then
   yaimlog WARNING "${SGE_INFOPROVIDER_VQUEUES} exists. It will not be changed!. A recommended configuration will be created under /tmp/sge/etc/sge-jobmanager/vqueues.conf. You can copy it manually!"
   SGE_INFOPROVIDER_VQUEUES="/tmp/sge/etc/sge-jobmanager/vqueues.conf"
   if [ ! -d /tmp/sge/etc/sge-jobmanager ]; then
        mkdir -p /tmp/sge/etc/sge-jobmanager
        chmod 700 /tmp/sge/etc/sge-jobmanager
   fi       
fi

cat <<EOF_SGE_INFOPROVIDER_VQUEUES > ${SGE_INFOPROVIDER_VQUEUES}
#
# SGE JobManager queue mapping file
#
# Virtual
# Queue         Property                New Value
# --------------------------------------------------
EOF_SGE_INFOPROVIDER_VQUEUES

for QUEUE in `echo $QUEUES | sed 's/"//g'` ; do
   cat <<EOF_SGE_INFOPROVIDER_VQUEUES >> $SGE_INFOPROVIDER_VQUEUES
$QUEUE          queue                   $QUEUE
EOF_SGE_INFOPROVIDER_VQUEUES
done

chmod 644 ${SGE_INFOPROVIDER_VQUEUES}


#---*---


###
### Build info-reporter.conf file
###

SGE_INFOPROVIDER_REPORTER=${SGE_INFOPROVIDER_DIR}/info-reporter.conf
yaimlog DEBUG "Creating $SGE_INFOPROVIDER_REPORTER file..."
if [ -e ${SGE_INFOPROVIDER_REPORTER} ]; then
   yaimlog WARNING "${SGE_INFOPROVIDER_REPORTER} exists. It will not be changed!. A recommended configuration will be created under /tmp/sge/etc/sge-jobmanager/info-reporter.conf. You can copy it manually!"
   SGE_INFOPROVIDER_REPORTER="/tmp/sge/etc/sge-jobmanager/info-reporter.conf"
fi

cat <<EOF_SGE_INFOPROVIDER_REPORTER > ${SGE_INFOPROVIDER_REPORTER}
#
# Sample configuration file for SGE information reporter
# ======================================================
SGE_ROOT = $SGE_ROOT
SGE_ARCH = `$SGE_ROOT/util/arch`
SGE_CELL = $SGE_CELL
ldif_file = $INSTALL_ROOT/glite/etc/gip/ldif/static-file-CE.ldif
vqueue_file = /etc/sge-jobmanager/vqueues.conf
state_file = /etc/sge-jobmanager/cluster.state
EOF_SGE_INFOPROVIDER_REPORTER

chown 644 ${SGE_INFOPROVIDER_REPORTER}


#---*---


###
### Build info-reporter.conf file
###

SGE_INFOPROVIDER_CLUSTER=${SGE_INFOPROVIDER_DIR}/cluster.state
yaimlog DEBUG "Set Cluster status to Production in $SGE_INFOPROVIDER_CLUSTER"
rm -f $SGE_INFOPROVIDER_CLUSTER
cat <<EOF_SGE_INFOPROVIDER_CLUSTER > ${SGE_INFOPROVIDER_CLUSTER}
Production
EOF_SGE_INFOPROVIDER_CLUSTER

chown 644 ${SGE_INFOPROVIDER_CLUSTER}


#---*---


###
### Set /glite/etc/gip/plugin/glite-info-dynamic-ce
###

CE_PLUGIN_FILE=${INSTALL_ROOT}/glite/etc/gip/plugin/glite-info-dynamic-ce
yaimlog DEBUG "Configure SGE dynamic information plugin: ${CE_PLUGIN_FILE}"
if [ -e ${CE_PLUGIN_FILE} ]; then
   rm -f ${CE_PLUGIN_FILE}
fi 
cat <<EOF_CE_PLUGIN_FILE > ${CE_PLUGIN_FILE}
#!/bin/sh
/opt/lcg/libexec/lcg-info-dynamic-scheduler -c /opt/glite/etc/lcg-info-dynamic-scheduler.conf
EOF_CE_PLUGIN_FILE

yaimlog DEBUG "Set proper permissions to ${CE_PLUGIN_FILE}"
chmod 755 ${CE_PLUGIN_FILE}


#---*---


###
### Set /opt/glite/etc/gip/plugin/glite-info-dynamic-scheduler-wrapper
###

CE_SCHEDULER_WRAPPER_FILE=${INSTALL_ROOT}/glite/etc/gip/plugin/glite-info-dynamic-scheduler-wrapper
yaimlog DEBUG "Configure SGE dynamic scheduler wrapper plugin: ${CE_SCHEDULER_WRAPPER_FILE}"
if [ -e ${CE_SCHEDULER_WRAPPER_FILE} ]; then
   rm -f ${CE_SCHEDULER_WRAPPER_FILE}
fi
cat <<EOF_CE_SCHEDULER_WRAPPER_FILE > ${CE_SCHEDULER_WRAPPER_FILE}
#!/bin/sh
/opt/lcg/libexec/sge_helper --info -c /opt/glite/etc/lcg-info-dynamic-scheduler.conf
EOF_CE_SCHEDULER_WRAPPER_FILE

yaimlog DEBUG "Set proper permissions to ${CE_SCHEDULER_WRAPPER_FILE}"
chmod 755 ${CE_SCHEDULER_WRAPPER_FILE}


#---*---


###
### SGE Configure /opt/glite/etc/lcg-info-dynamic-scheduler.conf
###

CONF_FILE="/opt/glite/etc/lcg-info-dynamic-scheduler.conf"
if [ ! -e ${CONF_FILE} ]; then
     yaimlog ABORT " The ${CONF_FILE} does not exist. Aborting..."
     exit 1
fi

LRMS_SECTION=`grep LRMS $CONF_FILE`
if [ "X${LRMS_SECTION}" != "X[LRMS]" ]; then
     yaimlog INFO "Adding [LRMS] section to ${CONF_FILE}"
     echo "[LRMS]" >> ${CONF_FILE}
fi

LRMS_PLUGIN=`grep lrms_backend_cmd $CONF_FILE | cut -f1 -d ":" | sed 's/ //g'`
if [ "X${LRMS_PLUGIN}" != "Xlrms_backend_cmd" ]; then
     yaimlog INFO "Adding lrms_backend_cmd to ${CONF_FILE}"
     echo "lrms_backend_cmd: /opt/lcg/libexec/sge_helper --lrmsinfo -c /opt/glite/etc/lcg-info-dynamic-scheduler.conf" >> ${CONF_FILE}
else
     LRMS_ARG=`grep lrms_backend_cmd $CONF_FILE | cut -f2 -d ":" | sed 's/ //g'`
     if [ "X${LRMS_ARG}" != "X/opt/lcg/libexec/sge_helper--lrmsinfo-c/opt/glite/etc/lcg-info-dynamic-scheduler.conf" ]; then
          yaimlog INFO "lrms_backend_cmd not properly configured. Fixing..."
          sed 's/lrms_backend_cmd.*/lrms_backend_cmd: \/opt\/lcg\/libexec\/sge_helper --lrmsinfo -c \/opt\/glite\/etc\/lcg\-info\-dynamic\-scheduler.conf/g' $CONF_FILE > /tmp/lcg-info-dynamic-scheduler.conf
           mv -f /tmp/lcg-info-dynamic-scheduler.conf $CONF_FILE
     fi
fi

SCHED_SECTION=`grep Scheduler $CONF_FILE`
if [ "X${SCHED_SECTION}" != "X[Scheduler]" ]; then
     yaimlog INFO "Adding [Scheduler] section to ${CONF_FILE}"
     echo "[Scheduler]" >> ${CONF_FILE}
fi

SCHED_PLUGIN=`grep vo_max_jobs_cmd $CONF_FILE | cut -f1 -d ":" | sed 's/ //g'`
if [ "X${SCHED_PLUGIN}" != "Xvo_max_jobs_cmd" ]; then
     yaimlog INFO "Adding vo_max_jobs_cmd to ${CONF_FILE}"
     echo "vo_max_jobs_cmd: /opt/lcg/libexec/sge_helper --vomaxjobs -c /opt/glite/etc/lcg-info-dynamic-scheduler.conf" >> ${CONF_FILE}
else
     SCHED_ARG=`grep vo_max_jobs_cmd $CONF_FILE | cut -f2 -d ":" | sed 's/ //g'`
     if [ "X${LRMS_ARG}" != "X/opt/lcg/libexec/sge_helper--vomaxjobs-c/opt/glite/etc/lcg-info-dynamic-scheduler.conf" ]; then
          yaimlog INFO "vo_max_jobs_cmd not properly configured. Fixing..."
          sed 's/vo_max_jobs_cmd.*/vo_max_jobs_cmd: \/opt\/lcg\/libexec\/sge_helper --vomaxjobs -c \/opt\/glite\/etc\/lcg\-info\-dynamic\-scheduler.conf/g' $CONF_FILE > /tmp/lcg-info-dynamic-scheduler.conf
           mv -f /tmp/lcg-info-dynamic-scheduler.conf $CONF_FILE
     fi
fi

return 0

}

