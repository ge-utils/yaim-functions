##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# NAME        : config_sge2ce
#
# DESCRIPTION : This function enables an lcg-CE 3.1 to work as a SGE submission host, 
#               being able to query/interact with the SGE QMASTER host (which may 
#               be working in a different machine)
#
# AUTHORS     : goncalo@lip.pt
#
# NOTES       : - Tested in SGE V60u7_1, V61u3
#
# YAIM MODULE : glite-yaim-sge-utils
#
##############################################################################


function config_sge2ce_check(){
    requires $1 SGE_ROOT SGE_CELL SGE_QMASTER SGE_EXECD BATCH_SERVER MY_DOMAIN
    return $?
}


function config_sge2ce_setenv(){
    return 0
}


function config_sge2ce(){

INSTALL_ROOT=${INSTALL_ROOT:-/opt}


yaimlog DEBUG "###"
yaimlog DEBUG "### Create SGE directories and paths"
yaimlog DEBUG "###"

yaimlog INFO \
yaimlog INFO " Building SGE directories under ${SGE_ROOT}/${SGE_CELL}"
if [ ! -d ${SGE_ROOT} ]; then
   yaimlog ABORT "${SGE_ROOT} doesn't exist. Is SGE installed under ${SGE_ROOT}? Please Check!!! Exiting..."  
   exit 1
fi

if [ ! -d ${SGE_ROOT}/${SGE_CELL} ]; then
   yaimlog WARNING " ${SGE_ROOT}/${SGE_CELL} doesn't exist. Probably SGE is installed but not configured yet..."
   yaimlog INFO " Making ${SGE_ROOT}/${SGE_CELL} ..."
   mkdir ${SGE_ROOT}/${SGE_CELL}
   yaimlog INFO " Making ${SGE_ROOT}/${SGE_CELL}/common ..."
   mkdir ${SGE_ROOT}/${SGE_CELL}/common
else
   yaimlog INFO " ${SGE_ROOT}/${SGE_CELL} directories are already created."
fi

#---*---

yaimlog DEBUG "###"
yaimlog DEBUG "### Check bootstrap and act_qmaster file where SGE qmaster is defined"
yaimlog DEBUG "###"

BOOTSTRAP_FILE=${SGE_ROOT}/${SGE_CELL}/common/bootstrap
if [ ! -e ${BOOTSTRAP_FILE} ]; then
   yaimlog INFO " ${BOOTSTRAP_FILE} doesn't exist. Creating it..."
   cat <<EOF_BOOTSTRAP_FILE > ${BOOTSTRAP_FILE}
admin_user        none
default_domain    ${MY_DOMAIN}
ignore_fqdn       true
spooling_method   classic
spooling_lib      libspoolc
spooling_params   ${SGE_ROOT}/${SGE_CELL}/common;${SGE_ROOT}/${SGE_CELL}/spool/qmaster
binary_path       ${SGE_ROOT}/bin
qmaster_spool_dir ${SGE_ROOT}/${SGE_CELL}/spool/qmaster
security_mode     none
EOF_BOOTSTRAP_FILE
fi

ACT_QMASTER_FILE=${SGE_ROOT}/${SGE_CELL}/common/act_qmaster
if [ -e ${ACT_QMASTER_FILE} ]; then
   OLD_BATCH_SERVER=`cat ${ACT_QMASTER_FILE}`
   yaimlog WARNING "${ACT_QMASTER_FILE} exists! New value \(${BATCH_SERVER}\) will overwrite old value \(${OLD_BATCH_SERVER}\)"
else
   yaimlog INFO " ${ACT_QMASTER_FILE} doesn't exist. Creating it..."
fi
cat <<EOF_ACT_QMASTER_FILE > ${ACT_QMASTER_FILE}
${BATCH_SERVER}
EOF_ACT_QMASTER_FILE

#---*---

yaimlog DEBUG "###"
yaimlog DEBUG "### Build the scripts which set the proper SGE environment"
yaimlog DEBUG "###"

yaimlog INFO " Create /etc/profile.d/sge.sh and /etc/profile.d/sge.csh"

SGE_SHENV_FILE=/etc/profile.d/sge.sh
if [ -e ${SGE_SHENV_FILE} ]; then
   rm -f ${SGE_SHENV_FILE}
fi
cat <<EOF_SGE_SHENV_FILE > ${SGE_SHENV_FILE}
# Define SGE_ROOT directory and SGE commands
export SGE_ROOT=${SGE_ROOT}
export SGE_CELL=${SGE_CELL}
. ${SGE_ROOT}/${SGE_CELL}/common/settings.sh
EOF_SGE_SHENV_FILE

SGE_CSHENV_FILE=/etc/profile.d/sge.csh
if [ -e ${SGE_CSHENV_FILE} ]; then
   rm -f ${SGE_CSHENV_FILE}
fi
cat <<EOF_SGE_CSHENV_FILE > ${SGE_CSHENV_FILE}
# Define SGE_ROOT directory and SGE commands
setenv SGE_ROOT "${SGE_ROOT}"
setenv SGE_CELL "${SGE_CELL}"
source ${SGE_ROOT}/${SGE_CELL}/common/settings.csh
EOF_SGE_CSHENV_FILE

SGE_SHSETTING_FILE=${SGE_ROOT}/${SGE_CELL}/common/settings.sh
yaimlog INFO " Check if ${SGE_SHSETTING_FILE} exists. If not, create it!"
if [ -e ${SGE_SHSETTING_FILE} ]; then
   count=`ls -tr ${SGE_SHSETTING_FILE}.OLD* | tail -n 1 | cut -f4 -d"."`
   if [ "X$count" == "X" ]; then
       count=0
   else
       count=`expr $count + 1`
   fi
   yaimlog WARNING " ${SGE_SHSETTING_FILE} exists. Your old file will be saved as ${SGE_SHSETTING_FILE}.OLD.${count}"
   mv -f ${SGE_SHSETTING_FILE} ${SGE_SHSETTING_FILE}.OLD.${count}
fi
cat <<EOF_SGE_SHSETTING_FILE > ${SGE_SHSETTING_FILE}
#!/bin/bash
SGE_ROOT=${SGE_ROOT}; export SGE_ROOT
ARCH=\`\$SGE_ROOT/util/arch\`
DEFAULTMANPATH=\`\$SGE_ROOT/util/arch -m\`
MANTYPE=\`\$SGE_ROOT/util/arch -mt\`
SGE_CELL=${SGE_CELL}; export SGE_CELL
SGE_QMASTER=${SGE_QMASTER}; export SGE_QMASTER
SGE_EXECD=${SGE_EXECD}; export SGE_EXECD
if [ "\$MANPATH" = "" ]; then
        MANPATH=\$DEFAULTMANPATH
fi
MANPATH=\$SGE_ROOT/\$MANTYPE:\$MANPATH; export MANPATH
PATH=\$SGE_ROOT/bin/\$ARCH:\$PATH; export PATH
shlib_path_name=\`\$SGE_ROOT/util/arch -lib\`
old_value=\`eval echo '\$'\$shlib_path_name\`
if [ x\$old_value = x ]; then
        eval \$shlib_path_name=\$SGE_ROOT/lib/\$ARCH
else
        eval \$shlib_path_name=\$SGE_ROOT/lib/\$ARCH:\$old_value
fi
export \$shlib_path_name
unset ARCH DEFAULTMANPATH MANTYPE shlib_path_name
EOF_SGE_SHSETTING_FILE
chmod 644 ${SGE_SHSETTING_FILE}
source ${SGE_SHENV_FILE}


SGE_CSHSETTING_FILE=${SGE_ROOT}/${SGE_CELL}/common/settings.csh
yaimlog INFO " Check if ${SGE_CSHSETTING_FILE} exists. If not, create it!"
if [ -e ${SGE_CSHSETTING_FILE} ]; then
   count=`ls -tr ${SGE_CSHSETTING_FILE}.OLD* | tail -n 1 | cut -f4 -d"."`
   if [ "X$count" == "X" ]; then
       count=0
   else
       count=`expr $count + 1`
   fi
   yaimlog WARNING " ${SGE_CSHSETTING_FILE} exists. Your old file will be saved as ${SGE_SHSETTING_FILE}.OLD.${count}"
   mv -f ${SGE_CSHSETTING_FILE} ${SGE_CSHSETTING_FILE}.OLD.${count}
fi
cat <<EOF_SGE_CSHSETTING_FILE > ${SGE_CSHSETTING_FILE}
#!/bin/tcsh
setenv SGE_ROOT ${SGE_ROOT}
set ARCH=\`\$SGE_ROOT/util/arch\`
set DEFAULTMANPATH=\`\$SGE_ROOT/util/arch -m\`
set MANTYPE=\`\$SGE_ROOT/util/arch -mt\`
setenv SGE_CELL ${SGE_CELL}
# unsetenv SGE_QMASTER
# unsetenv SGE_EXECD
setenv SGE_QMASTER ${SGE_QMASTER}
setenv SGE_EXECD ${SGE_EXECD}
if ( \$\?MANPATH == 1 ) then
   setenv MANPATH \$SGE_ROOT/\${MANTYPE}:\$MANPATH
else
   setenv MANPATH \$SGE_ROOT/\${MANTYPE}:\$DEFAULTMANPATH
endif
set path=( \$SGE_ROOT/bin/\$ARCH \$path )
set shlib_path_name=\`\$SGE_ROOT/util/arch -lib\`
if ( \`eval echo '\$?'\$shlib_path_name\` ) then
   set old_value=\`eval echo '\$'\$shlib_path_name\`
   setenv \$shlib_path_name "\$SGE_ROOT/lib/\$ARCH":"\$old_value"
else
   setenv \$shlib_path_name \$SGE_ROOT/lib/\$ARCH
endif
unset ARCH DEFAULTMANPATH MANTYPE shlib_path_name
EOF_SGE_CSHSETTING_FILE
chmod 644 ${SGE_CSHSETTING_FILE}

#---*---

yaimlog DEBUG "###"
yaimlog DEBUG "### Link binaries to lx26-x86 (original compilation)"
yaimlog DEBUG "###"

ARCH=`$SGE_ROOT/util/arch`
ARCH_DEFAULT=lx26-x86
if [ "X$ARCH" != "X$ARCH_DEFAULT" ]
then
   ln -s $SGE_ROOT/bin/$ARCH_DEFAULT $SGE_ROOT/bin/$ARCH
   ln -s $SGE_ROOT/utilbin/$ARCH_DEFAULT $SGE_ROOT/utilbin/$ARCH
   ln -s $SGE_ROOT/lib/$ARCH_DEFAULT $SGE_ROOT/lib/$ARCH
fi

#---*---

yaimlog DEBUG "###"
yaimlog DEBUG "### Define default sge_qstat options"
yaimlog DEBUG "###"

SGE_QSTAT_OPTIONS_FILE=${SGE_ROOT}/${SGE_CELL}/common/sge_qstat
if [ -e ${SGE_QSTAT_OPTIONS_FILE} ]; then
   rm -f ${SGE_QSTAT_OPTIONS_FILE}
fi
cat <<EOF_SGE_QSTAT_OPTIONS_FILE > ${SGE_QSTAT_OPTIONS_FILE}
-u *
EOF_SGE_QSTAT_OPTIONS_FILE

#---*---

yaimlog DEBUG "###"
yaimlog DEBUG "### Modify /etc/services file and add the appropriate ports for SGE daemons"
yaimlog DEBUG "###"

SERVICES_FILE=/etc/services
yaimlog INFO \
yaimlog INFO " Configuring sgemaster daemon in ${SERVICES_FILE}"
PORT1="X"`grep "${SGE_QMASTER}/tcp" ${SERVICES_FILE} | grep -v sge`
if [ "${PORT1}" != "X" ]; then
     yaimlog ABORT " Port ${SGE_QMASTER}/tcp is already used by other service. Check ${SERVICES_FILE}"
     exit 1
fi
VAR1="X"`grep ^sge_qmaster ${SERVICES_FILE}`
if [ "${VAR1}" == "X" ]; then
     yaimlog INFO " Adding sge_qmaster in $SERVICES_FILE"
     echo "sge_qmaster     ${SGE_QMASTER}/tcp           # tcp port for SGE Qmaster daemon" >> ${SERVICES_FILE}
fi
PORT2="X"`grep "${SGE_EXECD}/tcp" ${SERVICES_FILE} | grep -v sge`
if [ "${PORT2}" != "X" ]; then
     yaimlog ABORT " Port ${SGE_EXECD}/tcp is already used by other service. Check ${SERVICES_FILE}"
     exit 1
fi
VAR2="X"`grep ^sge_execd ${SERVICES_FILE}`
if [ "${VAR2}" == "X" ]; then
     yaimlog INFO " Adding sge_execd in ${SERVICES_FILE}"
     echo "sge_execd       ${SGE_EXECD}/tcp           # tcp port for SGE execd service" >> ${SERVICES_FILE}
fi

}

